{"ast":null,"code":"var _jsxFileName = \"/workspace/first-react-app/react-example/src/components/HTTPRequests.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class HTTPRequests extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      error: null\n    };\n  }\n  componentDidMount() {\n    axios.get(\"https://jsonplaceholder.typicode.com/posts/100\").then(response => {\n      console.log(response.data);\n      this.setState({\n        posts: Array.isArray(response.data) ? response.data : [response.data]\n      });\n    }).catch(error => {\n      error: error.message;\n    });\n  }\n  render() {\n    const posts = this.state.posts;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Posts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), posts.length ? posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [post.id, \". \", post.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"By User ID \", post.userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading posts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default HTTPRequests;\n\n// npm install axios\n// import axios into the component\n// call axios.get(\"API_URL\") in componentDidMount() to fetch data\n// call setState to update the data in the state\n// render the UI based on the new state values","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","HTTPRequests","constructor","props","state","posts","error","componentDidMount","get","then","response","console","log","data","setState","Array","isArray","catch","message","render","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","id","title","userId","body"],"sources":["/workspace/first-react-app/react-example/src/components/HTTPRequests.js"],"sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\n\nexport class HTTPRequests extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       posts: [],\n       error: null\n    }\n  }\n\n  componentDidMount() {\n    axios.get(\"https://jsonplaceholder.typicode.com/posts/100\")\n    .then(response => {\n      console.log(response.data)\n      this.setState({\n        posts: Array.isArray(response.data) ? response.data : [response.data]\n      })\n    })\n    .catch(error => {\n      error: error.message\n    })\n  }\n\n  render() {\n    const posts = this.state.posts;\n    return (\n      <div>\n        <h2>Posts:</h2>\n        {\n          posts.length ? (\n            posts.map(post => (\n              <div key={post.id}>\n                <h2>{post.id}. {post.title}</h2>\n                <h4>By User ID {post.userId}</h4>\n                <p>{post.body}</p>\n                <hr />\n              </div>\n            ))\n          ) : (\n          <h4>Loading posts...</h4>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default HTTPRequests\n\n\n// npm install axios\n// import axios into the component\n// call axios.get(\"API_URL\") in componentDidMount() to fetch data\n// call setState to update the data in the state\n// render the UI based on the new state values"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,YAAY,SAASJ,SAAS,CAAC;EAC1CK,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACVC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE;IACV,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClBT,KAAK,CAACU,GAAG,CAAC,gDAAgD,CAAC,CAC1DC,IAAI,CAACC,QAAQ,IAAI;MAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1B,IAAI,CAACC,QAAQ,CAAC;QACZT,KAAK,EAAEU,KAAK,CAACC,OAAO,CAACN,QAAQ,CAACG,IAAI,CAAC,GAAGH,QAAQ,CAACG,IAAI,GAAG,CAACH,QAAQ,CAACG,IAAI;MACtE,CAAC,CAAC;IACJ,CAAC,CAAC,CACDI,KAAK,CAACX,KAAK,IAAI;MACdA,KAAK,EAAEA,KAAK,CAACY,OAAO;IACtB,CAAC,CAAC;EACJ;EAEAC,MAAMA,CAAA,EAAG;IACP,MAAMd,KAAK,GAAG,IAAI,CAACD,KAAK,CAACC,KAAK;IAC9B,oBACEL,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAEbnB,KAAK,CAACoB,MAAM,GACVpB,KAAK,CAACqB,GAAG,CAACC,IAAI,iBACZ3B,OAAA;QAAAoB,QAAA,gBACEpB,OAAA;UAAAoB,QAAA,GAAKO,IAAI,CAACC,EAAE,EAAC,IAAE,EAACD,IAAI,CAACE,KAAK;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChCxB,OAAA;UAAAoB,QAAA,GAAI,aAAW,EAACO,IAAI,CAACG,MAAM;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjCxB,OAAA;UAAAoB,QAAA,EAAIO,IAAI,CAACI;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBxB,OAAA;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAJEG,IAAI,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKZ,CACN,CAAC,gBAEJxB,OAAA;QAAAoB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACvB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA,CAAC;EAEV;AACF;AAEA,eAAevB,YAAY;;AAG3B;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}